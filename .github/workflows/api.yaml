name: API Test and Deploy
on:
    push:
        paths:
            - 'services/tasks_api/**'
            - '.github/workflows/api.yaml'

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'us-east-2'
    APP_ENVIRONMENT: development



    
jobs:
    test:
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.11']
                poetry-version: ['1.8.2']
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                working-directory: services/tasks_api
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v3
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Poetry
              uses: abatilo/actions-poetry@v2.0.0
              with:
                poetry-version: ${{ matrix.poetry-version }}
            - name: Install dependencies
              run: poetry install --no-root
            - name: Run tests
              run: poetry run pytest tests.py --cov=./ --cov-report=xml
            - name: Upload coverage report
              uses: codecov/codecov-action@v3
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
    code-quality:
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.11']
                poetry-version: ['1.8.2']
                os: [ubuntu-latest]
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                working-directory: services/tasks_api
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v3
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install Poetry
              uses: abatilo/actions-poetry@v2.0.0
              with:
                poetry-version: ${{ matrix.poetry-version }}
            - name: Install dependencies
              run: poetry install --no-root
            - name: Run black
              run: poetry run black . --check
            - name: Run isort
              run: poetry run isort . --check-only
            - name: Run flake8
              run: poetry run flake8 .
            - name: Run bandit
              run: poetry run bandit -r .
    deploy-development:
      needs: [test, code-quality]
      strategy:
          fail-fast: false
          matrix:
              python-version: ['3.11']
              poetry-version: ['1.8.2']
              os: [ubuntu-latest]
              node-version: [16]
      runs-on: ${{ matrix.os }}
      defaults:
          run:
              working-directory: services/tasks_api
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up Python 3.11
          uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install Poetry
          uses: abatilo/actions-poetry@v2.0.0
          with:
            poetry-version: ${{ matrix.poetry-version }}
        - name: Install Serverless Framework
          run: npm install -g serverless
        - name: Install NPM dependencies
          run: npm install
        - name: Deploy to development
          run: sls deploy --stage development --verbose